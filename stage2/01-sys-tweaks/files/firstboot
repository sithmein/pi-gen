#!/bin/sh

set -e

case "${1}" in
  prereqs)
    exit 0
    ;;
esac

if ! grep -q firstboot /proc/cmdline; then
  exit 0
fi

get_variables () {
  set +e # This function does not work as intended with -e
  local_device_setup "$ROOT" "root file system"
  set -e
  ROOT_PART_NAME="$(lsblk -no kname "$DEV")"

  ROOT_DEV_NAME="$(lsblk -no pkname "$DEV")"
  ROOT_DEV="/dev/$ROOT_DEV_NAME"

  ROOT_PART_NUM=$(cat "/sys/block/$ROOT_DEV_NAME/$ROOT_PART_NAME/partition")
}

do_resize () {
  if [ "$ROOTFSTYPE" == "ext4" ]; then
    log_begin_msg "Resizing root partition and filesystem...\n\nDepending on storage size and speed, this may take a while."
  else
    log_begin_msg "Resizing root partition..."
  fi

  if parted -s -m -l "$ROOT_DEV" | grep -q ':gpt:'; then
    # Increase GPT to maximum size
    if ! sgdisk -e "$ROOT_DEV"; then
      FAIL_REASON="Moving GPT backup header failed\n$FAIL_REASON"
      return 1
    fi
  fi

  # Increase root partition to maximum size
  if ! parted -s "$ROOT_DEV" "resizepart $ROOT_PART_NUM 100%"; then
    FAIL_REASON="Resize of the root partition ($DEV) failed\n$FAIL_REASON"
    return 1
  fi

  if [ "$ROOTFSTYPE" == "ext4" ]; then
    resize2fs -f -p "$DEV"
    RET="$?"
    if [ "$RET" -ne 0 ]; then
      FAIL_REASON="Root partition resize failed\n$FAIL_REASON"
    fi
    return "$RET"
  fi
}

change_fs_uuid () {
  if [ "$ROOTFSTYPE" == "btrfs" ]; then
    log_begin_msg "Changing file system UUID..."
    echo y | btrfstune -u "$DEV"
    RET="$?"
    if [ "$RET" -ne 0 ]; then
      FAIL_REASON="Change root file system UUID failed\n$FAIL_REASON"
    fi
    return "$RET"
  fi
}

. /scripts/functions
. /scripts/local

get_variables
do_resize
change_fs_uuid

log_end_msg

exit 0
